#!/bin/bash
#
# chkconfig: - 91 35
# description: Starts and stops ${app} server. 
#
# Shell script to start/stop ${app} 
# If you want to change ${app} service settings please modify the server.xml
# file.
#
# NOTE: using bash for RPM based distros should be ok
#

DISPLAY=:0.0
export DISPLAY

# Source function library.
if [ -f /etc/init.d/functions ] ; then
     . /etc/init.d/functions
fi

# Source networking configuration.
if [ -f /etc/sysconfig/network ] ; then
     . /etc/sysconfig/network
fi

# Check that networking is up.
if [ ! -z "$NETWORKING" ] ; then
      if [ "$NETWORKING" = "no" ] ; then
           exit 0
      fi
fi

unset SERVERARGS
SERVERS=""
[ -f /etc/sysconfig/${app} ] && . /etc/sysconfig/${app}

prog=$"${app} server"

# OS specific support.  $var _must_ be set to either true or false.
cygwin=false;
darwin=false;
case "`uname`" in
  CYGWIN*) cygwin=true ;;
  Darwin*) darwin=true 
    if [ -z "$JAVA_VERSION" ] ; then
      JAVA_VERSION="CurrentJDK"
    else
      echo "Using Java version: $JAVA_VERSION"
    fi

    if [ -z "$JAVA_HOME" ] ; then
      JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/$JAVA_VERSION/Home
    fi
    ;;
  *) 
    if [ ! -d "$JAVA_HOME" ] ; then
      # look for java home in /usr/java
      if [ -d /usr/java/jre ] ; then
        JAVA_HOME=/usr/java
      elif [ `uname` = Linux ] ; then
        for jdkhome in `find /usr/java/ -type d -regex '.*\/j2sdk1\.4\.2...$' | sort`; do
          JAVA_HOME=$jdkhome;
        done
      fi 
	 fi

    if [ ! -d "$JAVA_HOME" ] ; then
      if [ `uname` = Linux ] ; then
        for jdkhome in `find /usr/java/ -type d -regex '.*\/jdk1\.[56]\.....$' | sort`; do
          JAVA_HOME=$jdkhome;
        done
      fi 
   fi
   ;;
esac

if [ -z "$_${app.caps}_HOME" ] ; then
  # try to find install home 
  if [ -d ${app.install.base} ] ; then
    ${app.caps}_HOME=${app.install.base}
  elif [ -d "$HOME/${app}-${version}" ] ; then
    ${app.caps}_HOME="$HOME/${app}-${version}"
  elif [ -d "/Applications/${app}-${version}" ] ; then
    ${app.caps}_HOME=/Applications/${app}-${version}
  fi
fi

if [ -z "$JAVA_HOME" ] ; then
  echo "Warning: JAVA_HOME environment variable is not set."
  echo "  If scrip fails because sun.* classes could not be found"
  echo "  you will need to set the JAVA_HOME environment variable"
  echo "  to the installation directory of java."
else
  echo JAVA_HOME=$JAVA_HOME
fi

if [ -z "$_${app.caps}_HOME" ] ; then
  echo "Warning: ${app.caps}_HOME environment variable is not set."
  echo "  If script fails because classes could not be found"
  echo "  you will need to set the ${app.caps}_HOME environment variable"
  echo "  to the installation directory of ${app}."
else
  echo ${app.caps}_HOME=$_${app.caps}_HOME
fi
CLASSPATH=$CLASSPATH:$JAVA_HOME/lib/tools.jar
# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
  [ -n "$_${app.caps}_HOME" ] &&
    ${app.caps}_HOME=`cygpath --unix "$_${app.caps}_HOME"`
  [ -n "$_${app.caps}_HOME_LOCAL" ] &&
    ${app.caps}_HOME_LOCAL=`cygpath --unix "$_${app.caps}_HOME_LOCAL"`
  [ -n "$JAVA_HOME" ] &&
    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
  [ -n "$CLASSPATH" ] &&
    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
fi

SERVER_HOME=$_${app.caps}_HOME
DAEMON_HOME=$SERVER_HOME/bin
CLASSPATH=$CLASSPATH:$DAEMON_HOME/bootstrapper.jar:$DAEMON_HOME/logger.jar:$DAEMON_HOME/daemon.jar
echo CLASSPATH=$CLASSPATH
${app.caps}_USER=$USER

TMP_DIR=$SERVER_HOME/var/tmp
PID_FILE=$SERVER_HOME/var/run/server.pid

cd $SERVER_HOME

case "$1" in
  start)
    #
    # Start ${app}
    #
    echo -n $"Starting $prog: "
    ulimit -S -c 0 >/dev/null 2>&1
    RETVAL=0
    
    $DAEMON_HOME/${app} \
    -user $_${app.caps}_USER \
    -home $JAVA_HOME \
    -Djava.io.tmpdir=$TMP_DIR \
    -Dlog4j.configuration=file://$SERVER_HOME/conf/log4j.properties\
    -Xms384m -Xmx384m \
    -pidfile $PID_FILE \
    -outfile $SERVER_HOME/var/log/${app}-stdout.log \
    -errfile $SERVER_HOME/var/log/${app}-stderr.log \
    -cp $CLASSPATH \
    org.apache.directory.daemon.JsvcBootstrapper \
    $_${app.caps}_HOME start

    if [ `uname` = "Darwin" ] ; then
        [ "$RETVAL" -eq 0 ] && echo successful ${app} server startup || \
             echo failed ${app} server start
    elif [ `uname` = "SunOS" ] ; then
        [ "$RETVAL" -eq 0 ] && echo success ${app} server startup || \
             echo failure ${app} server start
    else
        [ "$RETVAL" -eq 0 ] && success $"${app} server startup" || \
             failure $"${app} server start"
        echo
        if [ -d /var/lock/subsys ] ; then
               [ "$RETVAL" -eq 0 ] && touch $SERVER_HOME/var/${app}.lock
        fi
    fi

    exit $RETVAL
    ;;

  stop)
    #
    # Stop ${app}
    #
    echo -n $"Shutting down $prog: "
    RETVAL=0

    $DAEMON_HOME/${app} \
    -stop \
    -pidfile $PID_FILE \
    -Dlog4j.configuration=file://$SERVER_HOME/conf/log4j.properties\
    org.apache.directory.daemon.JsvcBootstrapper stop

    if [ `uname` = "Darwin" ] ; then
        [ "$RETVAL" -eq 0 ] && echo successful ${app} server shutdown || \
             echo failed ${app} server shutdown
    elif [ `uname` = "SunOS" ] ; then
        [ "$RETVAL" -eq 0 ] && echo success ${app} server shutdown || \
             echo failure ${app} server shutdown
    else
        [ "$RETVAL" -eq 0 ] && success $"${app} server shutdown" || \
             failure $"${app} server shutdown"
        echo
        if [ -d /var/lock/subsys/${app} ] ; then
               [ "$RETVAL" -eq 0 ] && rm $SERVER_HOME/var/${app}.lock
        fi
    fi

    exit $RETVAL
    ;;

  debug)
    #
    # Debug ${app}
    #
    echo -n $"Starting $prog in debug mode: "
    ulimit -S -c 0 >/dev/null 2>&1
    RETVAL=0
    
    if [ -z "$2" ] ; then
      echo
      echo ========================================================
      echo "Warning: the debug port is not set. Using 5005 default."
      echo ========================================================
      echo
      DEBUG_PORT=5005
    else
      DEBUG_PORT="$2"
    fi
    
    $JAVA_HOME/bin/java\
    -Dlog4j.configuration=file://$SERVER_HOME/conf/log4j.properties\
    -Xms384m -Xmx384m \
    -Dcom.sun.management.jmxremote \
    -Xdebug -Xnoagent -Djava.compiler=NONE\
    -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=$DEBUG_PORT\
    -jar $DAEMON_HOME/bootstrapper.jar \
    $_${app.caps}_HOME start
    ;;

  *)
    echo "Usage ${app} [start|stop|debug]"
    exit 1;;
esac
